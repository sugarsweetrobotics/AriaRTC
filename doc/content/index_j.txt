AriaRTC - 日本語
=======================


はじめに
========

クラスについては、 `APIドキュメンテーション`_ に参照してください。

.. _`APIドキュメンテーション`:
   doxygen/html/index.html

条件
====

AriaRTCはOpenRTM-aist 1.0.0以上のC++版が必要です。

AriaRTCは CMake_ を使います。CMake 2.8以上が必要です。

.. _CMAke:
   http://www.cmake.org

インストール
============

インストーラ
------------

Windowsのユーザはインストーラパッケージを使用してコンポーネントをインストール
することができます。これはコンポーネント及びそのすべての必要なライブラリを
インストールします。Windowsでインストールする場合、インストーラの使用を推奨してます。

- インストーラをダウンロードしてください。
- インストールを始めるためにインストーラをダブルクリックしてください。
- 指示にしたがってコンポーネントをインストールしてください。
- 環境変数の変更を適用するため、コンポーネントを使用する前にコンピューターを
  再起動する必要があるかもしれません。

AriaRTCは ``AriaRTCComp`` の実行をダブルクリックして実行することが
できます。あるいは、 ``AriaRTC`` を初期化関数の ``AriaRTCInit`` を利用して、
マネージャにロードすることができます。

ソースから
----------

ソースを使う場合は以下の手順でインストールしてください。

- ソースをダウンロードして解凍してください::

    tar -xvzf AriaRTC-1.0.0.tar.gz

- 解凍されたフォルダに入ってください::

    cd AriaRTC-1.0.0

- ``build`` フォルダを作ってください::

    mkdir build

- `` build`` フォルダに入ってください::

    cd build

- CMakeを実行してください::

    cmake ../

- エラーが出無い場合、makeを実行してください::

    make

- ``make install`` でコンポーネントをインストールしてください。選択された
  インストール場所に書き込み権限があるかを確認してください::

  ``make install``

- インストールする場所はccmakeを実行して ``CMAKE_INSTALL_PREFIX`` を
  設定することで変更が可能です。

    ccmake ../

ここまでで、コンポーネントが使えるようになりました。コンフィグレーションは次のセクションを
参照してください。

AriaRTCは ``AriaRTCComp`` を実行（ ``${prefix}/components/bin`` に
インストールされます）することでスタンドアローンモードで実行することができます。
あるいは、 ``libAriaRTC.so`` を初期化関数の ``AriaRTCInit`` を利用して、
マネージャにロードすることができます。このライブラリは ``${prefix}/components/lib`` 
または ``${prefix}/components/lib64`` にインストールされます。


コンフィグレーション
====================

使えるコンフィグレーションパラメータは以下のテーブルを参照
してください。

================ ================== ================ ====
パラメータ       データ型           デフォルト値     意味
================ ================== ================ ====
debug            int                0                
robotPort        string             COM1             Serial Port of Robot.
robotPortType    string             serial           Type of Robot Connection. tcp or serial is available
robotTcpPort     string             8101             TCP Port number of Robot Connection. If robotPortType is tcp, this value will be used.
robotTcpAddress  string             localhost        Tcp address of robot to be connected. If robotPortType is tcp, this will be used.
laserPort        string             COM2             Serial port number of laser sensor. If laserPortType is serial, this will be used.
laserPortType    string             serial           Connection type of laser sensor. tcp or serial is available.
laserType        string             none             Laser sensor type. Available value is none (for no sensor), urg2.0 (Hokuyo URG 04LX SCIP2.0 protocol), lms2xx (SICK LMS200 series), lms1xx (SICK LMS100 series).
laserTcpPort     string             8102             If laserPortType is tcp, robot and laser is remotely connected. This value defines the tcp port of remote laser.
bumperSendingPolicy string             event            Bumper data send policy. If event, the data is sent when the bumper state is changed. If continuous, every on_execute time the data is sent.
commandTimeout   int                3                The interval of timeout. If the targetVelocity is not sent for this interval, the robot rtc will go to error state and stop maneuvour.
odometryUpdateInterval double             0.5              This value indicates the maximum interval of odometry (currentPose) output. This RTC measures the current position of this robot, but if no difference to the previous position is seen, this robot do not output the value. If this value is set, RTC output the position if the output is resumed until this interval. If this value is negative, RTC do not output until the difference is seen.
initial_pose_x   double             0.0              Initial Pose (x)
initial_pose_y   double             0.0              Initial Pose (y)
initial_pose_z   double             0.0              Initial Pose (z)
================ ================== ================ ====

ポート
======

コンポーネントによって提供されるポートは以下のテーブルで述べられています。

=============== =========== ============================== ====
ポート名        ポート型    データ型                       意味
=============== =========== ============================== ====
targetVelocity  InPort      RTC::TimedVelocity2D           Target Velocity of Mobile Robot (vx, vy, vz) in robot coordinate
poseUpdate      InPort      RTC::TimedPose2D               If you want to update the internal value of current pose of mobile robot (in global coordinates), put data to this port.
currentVelocity OutPort     RTC::TimedVelocity2D           Current Velocity of Mobile Robot (In robot coordinate)
currentPose     OutPort     RTC::TimedPose2D               Current Pose estimated with Robot (usually odometry) in global coordinates.
range           OutPort     RTC::RangeData                 Ranger Sensor if robot is implemented
bumper          OutPort     RTC::TimedBooleanSeq           Bump Sensors if implemented. The order of sensor is same as the robot itself. Check the order with demo.exe program. If true, collide. If false, not collide. With the configuration bump policy will change the data sending policy. Please see it. 
sonar           OutPort     RTC::TimedDoubleSeq            Sonar Output (distance of each sensor)
=============== =========== ============================== ====

例
==

例のrtc.confファイルは ``${prefix}/components/share/AriaRTC/examples/conf/``
フォルダにインストールされています。

Changelog
=========


License
=======

このソフトウェアは産業技術総合研究所で開発されています。承認番号はH23PRO-????
です。このソフトウェアは Lesser General Public License (LGPL) ライセンスとして
公開されてます。COPYING.LESSER を参照してください。

