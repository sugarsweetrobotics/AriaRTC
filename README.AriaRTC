======================================================================
  RTComponent: AriaRTC specificatioin

  OpenRTM-aist-1.0.0
  Date: $Date$

  This file is generated by rtc-template with the following argments.

#   rtc-template -bcxx --module-name=AriaRTC 
#   --module-desc='Mobile Robots ARIA library avialble robot RT-component' --module-version=0.0.1 --module-vendor=SUGAR SWEET ROBOTICS 
#   --module-category=MobileRobot --module-comp-type=STATIC 
#   --module-act-type=PERIODIC --module-max-inst=1 
#   --config=debug:int:0 --config=robotPort:string:COM1 --config=robotPortType:string:serial --config=robotTcpPort:string:8101 --config=robotTcpAddress:string:localhost --config=laserPort:string:COM2 --config=laserPortType:string:serial --config=laserType:string:none --config=laserTcpPort:string:8102 --config=bumperSendingPolicy:string:event --config=commandTimeout:int:3 
#   --inport=targetVelocity:RTC::TimedVelocity2D --inport=poseUpdate:RTC::TimedPose2D --outport=currentVelocity:RTC::TimedVelocity2D --outport=currentPose:RTC::TimedPose2D --outport=range:RTC::RangeData --outport=bumper:RTC::TimedBooleanSeq 


======================================================================
    Basic Information
======================================================================
# <rtc-template block="module">
Module Name: AriaRTC
Description: Mobile Robots ARIA library avialble robot RT-component
Version:     0.0.1
Vendor:      SUGAR SWEET ROBOTICS
Category:    MobileRobot
Kind:        DataFlowComponent
Comp. Type:  STATIC
Act. Type:   PERIODIC
MAX Inst.:   1
Lang:        C++
Lang Type:   

Overview:    MobileRobot ARIA library RT-component. Basically,
             Mobile Robot controller, but the library also
             available to control laser sensors.
# </rtc-template>


======================================================================
    Activity definition
======================================================================

[on_initialize]    implemented

[on_finalize]

[on_startup]

[on_shutdown]

[on_activated]     implemented

[on_deactivated]   implemented

[on_execute]       implemented

[on_aborting]

[on_error]

[on_reset]

[on_state_update]

[on_rate_changed]

======================================================================
    InPorts definition
======================================================================
# <rtc-template block="inport">

	Name:        targetVelocity
	PortNumber:  0
	Description: Target Velocity of Mobile Robot (vx, vy, vz) in
	             robot coordinate
	PortType: 
	DataType:    RTC::TimedVelocity2D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            meter / sec, radian / sec
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        poseUpdate
	PortNumber:  1
	Description: If you want to update the internal value of
	             current pose of mobile robot (in global
	             coordinates), put data to this port.
	PortType: 
	DataType:    RTC::TimedPose2D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            meter, radian
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>

======================================================================
    OutPorts definition
======================================================================
# <rtc-template block="outport">

	Name:        currentVelocity
	PortNumber:  0
	Description: Current Velocity of Mobile Robot (In robot
	             coordinate)
	PortType: 
	DataType:    RTC::TimedVelocity2D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        currentPose
	PortNumber:  1
	Description: Current Pose estimated with Robot (usually
	             odometry) in global coordinates.
	PortType: 
	DataType:    RTC::TimedPose2D
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            meter, radian
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        range
	PortNumber:  2
	Description: Ranger Sensor if robot is implemented
	PortType: 
	DataType:    RTC::RangeData
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:

	Name:        bumper
	PortNumber:  3
	Description: Bump Sensors if implemented. The order of sensor
	             is same as the robot itself. Check the order with
	             demo.exe program. If true, collide. If false, not
	             collide. With the configuration bump policy will
	             change the data sending policy. Please see it.
	PortType: 
	DataType:    RTC::TimedBooleanSeq
	MaxOut: 
	[Data Elements]
		Name:
		Type:            
		Number:          
		Semantics:       
		Unit:            
		Frequency:       
		Operation Cycle: 
		RangeLow:
		RangeHigh:
		DefaultValue:


# </rtc-template>


======================================================================
    Service Port definition
======================================================================
# <rtc-template block="serviceport">
# </rtc-template> 

======================================================================
    Configuration definition
======================================================================
# <rtc-template block="configuration">
	Configuration:
		Name:             debug
		Description:     
		Type:            int
		DefaultValue:     0
		Unit:            
		Range:           
		Constraint:      

		Name:            robotPort robotPort
		Description:     Serial Port of Robot.
		Type:            string
		DefaultValue:     COM1
		Unit:            
		Range:           
		Constraint:      

		Name:            robotPortType robotPortType
		Description:     Type of Robot Connection. tcp or serial is
		                 available
		Type:            string
		DefaultValue:     serial
		Unit:            
		Range:           
		Constraint:      

		Name:            robotTcpPort robotTcpPort
		Description:     TCP Port number of Robot Connection. If
		                 robotPortType is tcp, this value will be
		                 used.
		Type:            string
		DefaultValue:     8101
		Unit:            
		Range:           
		Constraint:      

		Name:            robotTcpAddress robotTcpAddress
		Description:     Tcp address of robot to be connected. If
		                 robotPortType is tcp, this will be used.
		Type:            string
		DefaultValue:     localhost
		Unit:            
		Range:           
		Constraint:      

		Name:            laserPort laserPort
		Description:     Serial port number of laser sensor. If
		                 laserPortType is serial, this will be used.
		Type:            string
		DefaultValue:     COM2
		Unit:            
		Range:           
		Constraint:      

		Name:            laserPortType laserPortType
		Description:     Connection type of laser sensor. tcp or
		                 serial is available.
		Type:            string
		DefaultValue:     serial
		Unit:            
		Range:           
		Constraint:      

		Name:            laserType laserType
		Description:     Laser sensor type. Available value is none
		                 (for no sensor), urg2.0 (Hokuyo URG 04LX
		                 SCIP2.0 protocol), lms2xx (SICK LMS200
		                 series), lms1xx (SICK LMS100 series).
		Type:            string
		DefaultValue:     none
		Unit:            
		Range:           
		Constraint:      

		Name:            laserTcpPort laserTcpPort
		Description:     If laserPortType is tcp, robot and laser is
		                 remotely connected. This value defines the
		                 tcp port of remote laser.
		Type:            string
		DefaultValue:     8102
		Unit:            
		Range:           
		Constraint:      

		Name:            bumperSendingPolicy bumperSendingPolicy
		Description:     Bumper data send policy. If event, the data
		                 is sent when the bumper state is changed. If
		                 continuous, every on_execute time the data
		                 is sent.
		Type:            string
		DefaultValue:     event
		Unit:            
		Range:           
		Constraint:      

		Name:            commandTimeout commandTimeout
		Description:     The interval of timeout. If the
		                 targetVelocity is not sent for this
		                 interval, the robot rtc will go to error
		                 state and stop maneuvour.
		Type:            int
		DefaultValue:     3
		Unit:            
		Range:           
		Constraint:      

# </rtc-template> 

This software is developed at the National Institute of Advanced
Industrial Science and Technology. Approval number H23PRO-????. This
software is licensed under the Lesser General Public License. See
COPYING.LESSER.

This area is reserved for future OpenRTM.

